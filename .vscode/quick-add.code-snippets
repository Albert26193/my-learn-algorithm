{
  // Place your my-learn-algorithm-ts 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Immediately Invoked Function Expression": {
    "scope": "javascript, typescript",
    "prefix": "ziife",
    "body": [
      "(() => { \n\n})();"
    ],
  },
  "go head": {
    "scope": "go",
    "prefix": "zgohead",
    "body": [
      "package main\n\nimport(\n    //\"fmt\"\n    //\"strings\"\n)\n"
    ]
  },
  "go main": {
    "scope": "go",
    "prefix": "zgomain",
    "body": "func main(){}"
  },
  "go if err" :{
    "scope": "go",
    "prefix": "zi",
    "body": "if err != nil {\n    fmt.Println(\"Error:\", err)\n    return \n}"
  },
  
}